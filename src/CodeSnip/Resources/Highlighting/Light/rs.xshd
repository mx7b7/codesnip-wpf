<SyntaxDefinition name="Rust" extensions=".rs" xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">
	<Color name="Keyword" foreground="Blue" fontWeight="bold" />
	<Color name="Type" foreground="DarkCyan" />
	<Color name="Builtin" foreground="DarkMagenta" />
	<Color name="Macro" foreground="DarkBlue" fontWeight="bold" />
	<Color name="Comment" foreground="Green" />
	<Color name="String" foreground="Brown" />
	<Color name="Number" foreground="DarkRed" />
	<Color name="Function" foreground="Purple" />
	<RuleSet>
		<Keywords color="Keyword">
			<Word>abstract</Word>
			<Word>as</Word>
			<Word>async</Word>
			<Word>await</Word>
			<Word>become</Word>
			<Word>box</Word>
			<Word>break</Word>
			<Word>const</Word>
			<Word>continue</Word>
			<Word>crate</Word>
			<Word>do</Word>
			<Word>dyn</Word>
			<Word>else</Word>
			<Word>enum</Word>
			<Word>extern</Word>
			<Word>false</Word>
			<Word>final</Word>
			<Word>fn</Word>
			<Word>for</Word>
			<Word>if</Word>
			<Word>impl</Word>
			<Word>in</Word>
			<Word>let</Word>
			<Word>loop</Word>
			<Word>macro</Word>
			<Word>match</Word>
			<Word>mod</Word>
			<Word>move</Word>
			<Word>mut</Word>
			<Word>override</Word>
			<Word>priv</Word>
			<Word>pub</Word>
			<Word>ref</Word>
			<Word>return</Word>
			<Word>self</Word>
			<Word>Self</Word>
			<Word>static</Word>
			<Word>struct</Word>
			<Word>super</Word>
			<Word>trait</Word>
			<Word>true</Word>
			<Word>try</Word>
			<Word>type</Word>
			<Word>typeof</Word>
			<Word>union</Word>
			<Word>unsafe</Word>
			<Word>unsized</Word>
			<Word>use</Word>
			<Word>virtual</Word>
			<Word>where</Word>
			<Word>while</Word>
			<Word>yield</Word>
		</Keywords>
		
		<Keywords color="Type">
			<Word>i8</Word>
			<Word>i16</Word>
			<Word>i32</Word>
			<Word>i64</Word>
			<Word>i128</Word>
			<Word>isize</Word>
			<Word>u8</Word>
			<Word>u16</Word>
			<Word>u32</Word>
			<Word>u64</Word>
			<Word>u128</Word>
			<Word>usize</Word>
			<Word>f32</Word>
			<Word>f64</Word>
			<Word>str</Word>
			<Word>char</Word>
			<Word>bool</Word>
			<Word>Box</Word>
			<Word>Option</Word>
			<Word>Result</Word>
			<Word>String</Word>
			<Word>Vec</Word>
		</Keywords>
		
		<Keywords color="Builtin">
			<Word>drop</Word>
			<Word>Copy</Word>
			<Word>Send</Word>
			<Word>Sized</Word>
			<Word>Sync</Word>
			<Word>Drop</Word>
			<Word>Fn</Word>
			<Word>FnMut</Word>
			<Word>FnOnce</Word>
			<Word>ToOwned</Word>
			<Word>Clone</Word>
			<Word>Debug</Word>
			<Word>PartialEq</Word>
			<Word>PartialOrd</Word>
			<Word>Eq</Word>
			<Word>Ord</Word>
			<Word>AsRef</Word>
			<Word>AsMut</Word>
			<Word>Into</Word>
			<Word>From</Word>
			<Word>Default</Word>
			<Word>Iterator</Word>
			<Word>Extend</Word>
			<Word>IntoIterator</Word>
			<Word>DoubleEndedIterator</Word>
			<Word>ExactSizeIterator</Word>
			<Word>SliceConcatExt</Word>
			<Word>ToString</Word>
			<Word>Some</Word>
			<Word>None</Word>
			<Word>Ok</Word>
			<Word>Err</Word>
		</Keywords>
		
		<Rule color="Macro">\b[a-zA-Z_][a-zA-Z0-9_]*!</Rule>
		
		<Span color="Comment">
			<Begin>//</Begin>
			<End>\n</End>
		</Span>
		<Span color="Comment" multiline="true">
			<Begin>/\*</Begin>
			<End>\*/</End>
		</Span>
		<Span color="String">
			<Begin>"</Begin>
			<End>"</End>
			<RuleSet>
				<Span begin="\\" end="." />
			</RuleSet>
		</Span>
		<!-- Char literal -->
		<Span color="String">
			<Begin>b?'</Begin>
			<End>'</End>
			<RuleSet>
				<Span begin="\\." end="." />
			</RuleSet>
		</Span>
		<!-- Numbers -->
		<Rule color="Number">\b0b[01_]+(u8|u16|u32|u64|u128|usize|i8|i16|i32|i64|i128|isize)?\b</Rule>
		<Rule color="Number">\b0o[0-7_]+(u8|u16|u32|u64|u128|usize|i8|i16|i32|i64|i128|isize)?\b</Rule>
		<Rule color="Number">\b0x[A-Fa-f0-9_]+(u8|u16|u32|u64|u128|usize|i8|i16|i32|i64|i128|isize)?\b</Rule>
		<Rule color="Number">\b\d[\d_]*(\.[\d_]+)?([eE][+-]?[\d_]+)?(f32|f64)?\b</Rule>
		<!-- Funkcije - definicije 
    <Rule color="Function">\bfn\s+[a-zA-Z_][a-zA-Z0-9_]*\b</Rule>-->
		<!-- Funkcije/metode - pozivi (identifikator ispred zagrade) -->
		<Rule color="Function">\b[a-zA-Z_][a-zA-Z0-9_]*\b(?=\s*\()</Rule>
	</RuleSet>
</SyntaxDefinition>
